{"ast":null,"code":"var _jsxFileName = \"G:\\\\Projects\\\\react-watchlist\\\\src\\\\context\\\\GlobalState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, createContext } from 'react';\nimport AppReducer from './AppReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  watchlist: [],\n  watched: []\n};\nexport const GlobalContext = /*#__PURE__*/createContext(initialState);\nexport const GlobalProvider = props => {\n  _s();\n\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  const addMovieToWatchlist = movie => {\n    dispatch({\n      type: \"ADD_MOVIE_TO_WATCHLIST\",\n      payload: movie\n    });\n  };\n\n  const addMovieToWatched = movie => {\n    dispatch({\n      type: \"ADD_MOVIE_TO_WATCHED\",\n      payload: movie\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      watchlist: state.watchlist,\n      watched: state.watched,\n      addMovieToWatchlist,\n      addMovieToWatched\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GlobalProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["G:/Projects/react-watchlist/src/context/GlobalState.js"],"names":["React","useReducer","createContext","AppReducer","initialState","watchlist","watched","GlobalContext","GlobalProvider","props","state","dispatch","addMovieToWatchlist","movie","type","payload","addMovieToWatched","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,OAAO,EAAE;AAFQ,CAArB;AAKA,OAAO,MAAMC,aAAa,gBAAGL,aAAa,CAACE,YAAD,CAAnC;AAEP,OAAO,MAAMI,cAAc,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,UAAU,CAACE,UAAD,EAAaC,YAAb,CAApC;;AAEA,QAAMQ,mBAAmB,GAAIC,KAAD,IAAW;AACnCF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,wBAAR;AAAkCC,MAAAA,OAAO,EAAEF;AAA3C,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMG,iBAAiB,GAAIH,KAAD,IAAW;AACjCF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,sBAAR;AAAgCC,MAAAA,OAAO,EAAEF;AAAzC,KAAD,CAAR;AACH,GAFD;;AAIA,sBACI,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC3BR,MAAAA,SAAS,EAAEK,KAAK,CAACL,SADU;AAE3BC,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAFY;AAG3BM,MAAAA,mBAH2B;AAI3BI,MAAAA;AAJ2B,KAA/B;AAAA,cAMKP,KAAK,CAACQ;AANX;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CArBM;;GAAMT,c;;KAAAA,c","sourcesContent":["import React, { useReducer, createContext } from 'react'\r\nimport AppReducer from './AppReducer'\r\n\r\nconst initialState = {\r\n    watchlist: [],\r\n    watched: [],\r\n}\r\n\r\nexport const GlobalContext = createContext(initialState)\r\n\r\nexport const GlobalProvider = (props) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState)\r\n\r\n    const addMovieToWatchlist = (movie) => {\r\n        dispatch({ type: \"ADD_MOVIE_TO_WATCHLIST\", payload: movie });\r\n    };\r\n\r\n    const addMovieToWatched = (movie) => {\r\n        dispatch({ type: \"ADD_MOVIE_TO_WATCHED\", payload: movie });\r\n    };\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            watchlist: state.watchlist,\r\n            watched: state.watched,\r\n            addMovieToWatchlist,\r\n            addMovieToWatched\r\n        }}>\r\n            {props.children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}