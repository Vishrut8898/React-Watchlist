{"ast":null,"code":"var _jsxFileName = \"G:\\\\Projects\\\\react-watchlist\\\\src\\\\context\\\\GlobalState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (action, state) => {\n  switch (action.type) {\n    case 'ADD_MOVIE_TO_WATCHLIST':\n      return { ...state,\n        watchlist: [action.payload, ...state.watchlist]\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst initialState = {\n  watchlist: [],\n  watched: []\n};\nconst GlobalContext = /*#__PURE__*/createContext(initialState);\n\nconst GlobalProvider = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const addMovieToWatchlist = movie => {\n    dispatch({\n      type: \"ADD_MOVIE_TO_WATCHLIST\",\n      payload: movie\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      watchlist: state.watchlist,\n      watched: state.watched,\n      addMovieToWatchlist\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GlobalProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GlobalProvider;\nexport default GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["G:/Projects/react-watchlist/src/context/GlobalState.js"],"names":["React","useReducer","createContext","reducer","action","state","type","watchlist","payload","initialState","watched","GlobalContext","GlobalProvider","dispatch","addMovieToWatchlist","movie","props","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;;;AAEA,MAAMC,OAAO,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC/B,UAAQD,MAAM,CAACE,IAAf;AACI,SAAK,wBAAL;AACI,aAAO,EACH,GAAGD,KADA;AAEHE,QAAAA,SAAS,EAAE,CAACH,MAAM,CAACI,OAAR,EAAiB,GAAGH,KAAK,CAACE,SAA1B;AAFR,OAAP;;AAIJ;AACI,aAAOF,KAAP;AAPR;AASH,CAVD;;AAYA,MAAMI,YAAY,GAAG;AACjBF,EAAAA,SAAS,EAAE,EADM;AAEjBG,EAAAA,OAAO,EAAE;AAFQ,CAArB;AAKA,MAAMC,aAAa,gBAAGT,aAAa,CAACO,YAAD,CAAnC;;AAEA,MAAMG,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBZ,UAAU,CAACE,OAAD,EAAUM,YAAV,CAApC;;AAEA,QAAMK,mBAAmB,GAAIC,KAAD,IAAW;AACnCF,IAAAA,QAAQ,CAAC;AAACP,MAAAA,IAAI,EAAE,wBAAP;AAAiCE,MAAAA,OAAO,EAAEO;AAA1C,KAAD,CAAR;AACH,GAFD;;AAIA,sBACI,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC3BR,MAAAA,SAAS,EAAEF,KAAK,CAACE,SADU;AAE3BG,MAAAA,OAAO,EAAEL,KAAK,CAACK,OAFY;AAG3BI,MAAAA;AAH2B,KAA/B;AAAA,cAKKE,KAAK,CAACC;AALX;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAhBD;;GAAML,c;;KAAAA,c;AAkBN,eAAeA,cAAf","sourcesContent":["import React, { useReducer, createContext } from 'react'\r\n\r\nconst reducer = (action, state) => {\r\n    switch (action.type) {\r\n        case 'ADD_MOVIE_TO_WATCHLIST':\r\n            return {\r\n                ...state,\r\n                watchlist: [action.payload, ...state.watchlist]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    watchlist: [],\r\n    watched: [],\r\n}\r\n\r\nconst GlobalContext = createContext(initialState)\r\n\r\nconst GlobalProvider = () => {\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n    const addMovieToWatchlist = (movie) => {\r\n        dispatch({type: \"ADD_MOVIE_TO_WATCHLIST\", payload: movie})\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            watchlist: state.watchlist,\r\n            watched: state.watched,\r\n            addMovieToWatchlist\r\n        }}>\r\n            {props.children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n\r\nexport default GlobalProvider\r\n"]},"metadata":{},"sourceType":"module"}